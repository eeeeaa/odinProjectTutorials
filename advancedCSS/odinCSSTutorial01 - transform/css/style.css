@import url("https://fonts.googleapis.com/css2?family=Anton&display=swap");

*,
*::before,
*::after {
  padding: 0;
  margin: 0 auto;
  box-sizing: border-box;
}

body {
  font-family: "Anton", sans-serif;
  background-color: #eee;
  color: #333;
  min-height: 100vh;
}

.hidden {
  position: fixed;
  top: -10000px;
  left: -10000px;
  visibility: hidden;
}

.red-box,
.blue-box {
  position: absolute;
  width: 25px;
  height: 25px;
}

/*2D transform*/
/*order of transform functions matter -> its call chaining transform*/
.red-box {
  background: red;
  transform: rotate(45deg) translate(200%);
  /*it rotate 45 deg and translate based on the 45deg box origin (it moves diagonally*/
}

.blue-box {
  background: blue;
  transform: translate(200%) rotate(45deg);
  /*it translate to destination first then rotate box*/
}

/*3D transform*/
/*use perspective function on parent or first in chain + other transform functions for 3D effect*/

.animation-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  align-items: center;
  gap: 1em;
  padding: 1em;
}

.container {
  position: relative;
  width: 200px;
  height: 200px;
  border: 1px solid #fff;
  border-radius: 4px;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  margin: 1em;

  -webkit-perspective: 240px;
  perspective: 240px;
}

.containerCube {
  width: 400px;
  height: 400px;
  border: 2px solid white;
  border-radius: 4px;
  display: flex;
  justify-content: center;
  align-items: center;
  perspective: 800px;
  perspective-origin: top right;
}

/*rotate cube in 3 dimension*/
.cube-scale,
.cube {
  position: relative;
  width: 200px;
  height: 200px;
  transform-style: preserve-3d; /*preserve the 3D perspective of the children when transform*/
}

.cube {
  animation: cubeRotate 10s linear infinite;
}

.cube-scale {
  animation: cubeScale 5s linear infinite;
}

.side {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0.9;
  border: 2px solid white;
}

.front {
  background-color: #d50000;
  transform: translateZ(100px);
}
.back {
  background-color: #aa00ff;
  transform: translateZ(-100px);
}

.left {
  background-color: #304ffe;
  transform: rotateY(90deg) translateZ(100px);
}
.right {
  background-color: #0091ea;
  transform: rotateY(-90deg) translateZ(100px);
}

.top {
  background-color: #00bfa5;
  transform: rotateX(90deg) translateZ(100px);
}
.bottom {
  background-color: #64dd17;
  transform: rotateX(-90deg) translateZ(100px);
}

.square {
  width: 100px;
  height: 100px;
  background-color: green;
}

/*translate along the x, y , and/or z axis*/
.move-x {
  animation: moveOnX 2s infinite ease-in-out alternate;
}

.move-y {
  animation: moveOnY 2s infinite ease-in-out alternate;
}

.move-z {
  animation: moveOnZ 2s infinite ease-in-out alternate;
}

/*rotate along the x, y, and/or z axis*/
.rotate-x {
  animation: rotateOnX 2s infinite ease-in-out alternate;
}

.rotate-y {
  animation: rotateOnY 2s infinite ease-in-out alternate;
}

.rotate-z {
  animation: rotateOnZ 2s infinite ease-in-out alternate;
}

.rotate-static-y {
  transform: rotateY(90deg);
  transform: rotateY(90deg);
}

/*translate the perspective origin point*/
.move-origin {
  animation: moveOrigin 4s infinite ease-in-out alternate;
}

@keyframes cubeRotate {
  from {
    transform: rotateY(0deg) rotateX(720deg) rotateZ(0deg);
  }
  to {
    transform: rotateY(360deg) rotateX(0deg) rotateZ(360deg);
  }
}

/*note: scaleZ(z) is same as scale3d(1, 1, z)*/
@keyframes cubeScale {
  from {
    transform: scale3d(0.5, 0.5, 0.5);
  }
  to {
    transform: scale3d(1, 1, 1);
  }
}

/*Note: use translate3d(tx, ty, tz) to translate all axis at once*/
@keyframes moveOnX {
  from {
    -webkit-transform: translateX(-50px);
    transform: translateX(-50px);
  }
  to {
    -webkit-transform: translateX(50px);
    transform: translateX(50px);
  }
}

@keyframes moveOnY {
  from {
    -webkit-transform: translateY(-50px);
    transform: translateY(-50px);
  }
  to {
    -webkit-transform: translateY(50px);
    transform: translateY(50px);
  }
}

@keyframes moveOnZ {
  from {
    -webkit-transform: translateZ(-50px);
    transform: translateZ(-50px);
  }
  to {
    -webkit-transform: translateZ(50px);
    transform: translateZ(50px);
  }
}

@keyframes rotateOnX {
  to {
    -webkit-transform: rotateX(360deg);
    transform: rotateX(360deg);
  }
}

@keyframes rotateOnY {
  to {
    -webkit-transform: rotateY(360deg);
    transform: rotateY(360deg);
  }
}

@keyframes rotateOnZ {
  to {
    -webkit-transform: rotateZ(360deg);
    transform: rotateZ(360deg);
  }
}

@keyframes moveOrigin {
  from {
    -webkit-perspective-origin: left;
    perspective-origin: left;
  }
}
